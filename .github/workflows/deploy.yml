name: Deploy Test Flow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Download and prepare deployer
      - name: Setup deployer
        id: setup-deployer
        run: |
          echo "Fetching deployer metadata..."
          # Use the full URL instead of relying on path resolution
          FULL_URL="${{ secrets.ONNYX_SERVER_URL }}/api/external/storage/deployer-releases/latest.json"
          echo "Requesting metadata from: $FULL_URL"
          
          # Add -L flag to follow redirects and use -f to fail on HTTP errors
          METADATA=$(curl -s -L -f -H "X-API-Key: ${{ secrets.ONNYX_API_KEY }}" "$FULL_URL")
          
          # Check if we got a valid response
          if [ -z "$METADATA" ]; then
            echo "Error: Empty response from server"
            exit 1
          fi
          
          echo "Response received, validating JSON..."
          
          # Validate JSON and extract Linux filename
          if ! LINUX_FILE=$(echo "$METADATA" | jq -e -r '.platforms[] | select(.platform=="linux") | .filename'); then
            echo "Error: Failed to get valid deployer metadata"
            echo "API Response: $METADATA"
            exit 1
          fi
          
          echo "Found deployer version: $LINUX_FILE"
          
          # Download the deployer with full URL and follow redirects
          echo "Downloading deployer..."
          DEPLOYER_URL="${{ secrets.ONNYX_SERVER_URL }}/api/external/storage/deployer-releases/$LINUX_FILE"
          echo "Downloading from: $DEPLOYER_URL"
          
          if ! curl -s -L -f -o deploy_to_onnyx -H "X-API-Key: ${{ secrets.ONNYX_API_KEY }}" "$DEPLOYER_URL"; then
            echo "Error: Failed to download deployer"
            exit 1
          fi
          
          # Make executable
          chmod +x deploy_to_onnyx
          echo "Deployer ready: $(ls -la deploy_to_onnyx)"

      # Update configuration and deploy
      - name: Deploy to Onnyx
        run: |
          # Verify deploy.yaml exists
          if [ ! -f deploy.yaml ]; then
            echo "Error: deploy.yaml not found. Please create a deploy.yaml file in the repository."
            exit 1
          fi
          
          # Update server configuration
          echo "Updating deploy.yaml with server configuration..."
          TMP_FILE=$(mktemp)
          cat > "$TMP_FILE" << EOF
          # Server configuration
          server:
            url: "${{ secrets.ONNYX_SERVER_URL }}"
            api_key: "${{ secrets.ONNYX_API_KEY }}"
            version: "${{ github.sha }}"

          EOF
          
          # Remove existing server section if present
          if grep -q "^server:" deploy.yaml; then
            sed -i '/^server:/,/^[a-z]/{/^[a-z]/!d}' deploy.yaml
            sed -i '/^server:/d' deploy.yaml
          fi
          
          # Combine files
          cat "$TMP_FILE" deploy.yaml > deploy_combined.yaml
          mv deploy_combined.yaml deploy.yaml
          rm "$TMP_FILE"
          
          # Run deployment
          echo "Running deployment..."
          ./deploy_to_onnyx -config deploy.yaml
          
          # Check exit code
          if [ $? -ne 0 ]; then
            echo "Error: Deployment failed"
            exit 1
          fi
          
          echo "Deployment completed successfully"
